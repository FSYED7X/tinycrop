'use strict';

var Listeners = require('./Listeners.js');

var Input = function Input(domElement) {
  var listeners = Listeners.create();
  var downEvent = null;
  this.listeners = listeners;

  function createEventForMouse(source) {
    var x = source.offsetX;
    var y = source.offsetY;

    return {
      source: source,
      x: x,
      y: y,
      dx: downEvent ? x - downEvent.x : 0,
      dy: downEvent ? y - downEvent.y : 0,
      type: 'Mouse'
    };
  }

  function createEventForTouch(source) {
    var bounds = source.target.getBoundingClientRect();
    var touch = source.touches.length > 0 ? source.touches[0] : source.changedTouches[0];

    var x = touch.clientX - bounds.left;
    var y = touch.clientY - bounds.top;

    return {
      source: source,
      x: x,
      y: y,
      dx: downEvent ? x - downEvent.x : 0,
      dy: downEvent ? y - downEvent.y : 0,
      type: 'Touch'
    };
  }

  domElement.addEventListener('mousedown', function (source) {
    downEvent = createEventForMouse(source);
    listeners.notify('down', downEvent);
  });

  domElement.addEventListener('touchstart', function (source) {
    downEvent = createEventForTouch(source);
    listeners.notify('down', downEvent);
  });

  domElement.addEventListener('mousemove', function (source) {
    listeners.notify('move', createEventForMouse(source));
  });

  domElement.addEventListener('touchmove', function (source) {
    listeners.notify('move', createEventForTouch(source));
  });

  domElement.addEventListener('mouseup', function (source) {
    listeners.notify('up', createEventForMouse(source));
  });

  domElement.addEventListener('touchend', function (source) {
    listeners.notify('up', createEventForTouch(source));
    downEvent = null;
  });

  domElement.addEventListener('mouseout', function (source) {
    listeners.notify('cancel', createEventForMouse(source));
    downEvent = null;
  });

  domElement.addEventListener('touchcancel', function (source) {
    listeners.notify('cancel', createEventForTouch(source));
    downEvent = null;
  });
};

Input.create = function (domElement) {
  return new Input(domElement);
};

Input.prototype.on = function (type, fn) {
  this.listeners.on(type, fn);
  return this;
};

Input.prototype.off = function (type, fn) {
  this.listeners.off(type, fn);
  return this;
};

module.exports = Input;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9JbnB1dC5qcyJdLCJuYW1lcyI6WyJMaXN0ZW5lcnMiLCJyZXF1aXJlIiwiSW5wdXQiLCJkb21FbGVtZW50IiwibGlzdGVuZXJzIiwiY3JlYXRlIiwiZG93bkV2ZW50IiwiY3JlYXRlRXZlbnRGb3JNb3VzZSIsInNvdXJjZSIsIngiLCJvZmZzZXRYIiwieSIsIm9mZnNldFkiLCJkeCIsImR5IiwidHlwZSIsImNyZWF0ZUV2ZW50Rm9yVG91Y2giLCJib3VuZHMiLCJ0YXJnZXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3VjaCIsInRvdWNoZXMiLCJsZW5ndGgiLCJjaGFuZ2VkVG91Y2hlcyIsImNsaWVudFgiLCJsZWZ0IiwiY2xpZW50WSIsInRvcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJub3RpZnkiLCJwcm90b3R5cGUiLCJvbiIsImZuIiwib2ZmIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxZQUFZQyxRQUFRLGdCQUFSLENBQWhCOztBQUVBLElBQUlDLFFBQVEsU0FBUkEsS0FBUSxDQUFVQyxVQUFWLEVBQXNCO0FBQ2hDLE1BQUlDLFlBQVlKLFVBQVVLLE1BQVYsRUFBaEI7QUFDQSxNQUFJQyxZQUFZLElBQWhCO0FBQ0EsT0FBS0YsU0FBTCxHQUFpQkEsU0FBakI7O0FBRUEsV0FBU0csbUJBQVQsQ0FBOEJDLE1BQTlCLEVBQXNDO0FBQ3BDLFFBQUlDLElBQUlELE9BQU9FLE9BQWY7QUFDQSxRQUFJQyxJQUFJSCxPQUFPSSxPQUFmOztBQUVBLFdBQU87QUFDTEosY0FBUUEsTUFESDtBQUVMQyxTQUFHQSxDQUZFO0FBR0xFLFNBQUdBLENBSEU7QUFJTEUsVUFBSVAsWUFBWUcsSUFBSUgsVUFBVUcsQ0FBMUIsR0FBOEIsQ0FKN0I7QUFLTEssVUFBSVIsWUFBWUssSUFBSUwsVUFBVUssQ0FBMUIsR0FBOEIsQ0FMN0I7QUFNTEksWUFBTTtBQU5ELEtBQVA7QUFRRDs7QUFFRCxXQUFTQyxtQkFBVCxDQUE4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QUFLQTlCLE1BQU00QixTQUFOLENBQWdCRyxHQUFoQixHQUFzQixVQUFVbEIsSUFBVixFQUFnQmlCLEVBQWhCLEVBQW9CO0FBQ3hDLE9BQUs1QixTQUFMLENBQWU2QixHQUFmLENBQW1CbEIsSUFBbkIsRUFBeUJpQixFQUF6QjtBQUNBLFNBQU8sSUFBUDtBQUNELENBSEQ7O0FBS0FFLE9BQU9DLE9BQVAsR0FBaUJqQyxLQUFqQiIsImZpbGUiOiJJbnB1dC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0ZW5lcnMgPSByZXF1aXJlKCcuL0xpc3RlbmVycy5qcycpXG5cbnZhciBJbnB1dCA9IGZ1bmN0aW9uIChkb21FbGVtZW50KSB7XG4gIHZhciBsaXN0ZW5lcnMgPSBMaXN0ZW5lcnMuY3JlYXRlKClcbiAgdmFyIGRvd25FdmVudCA9IG51bGxcbiAgdGhpcy5saXN0ZW5lcnMgPSBsaXN0ZW5lcnNcblxuICBmdW5jdGlvbiBjcmVhdGVFdmVudEZvck1vdXNlIChzb3VyY2UpIHtcbiAgICB2YXIgeCA9IHNvdXJjZS5vZmZzZXRYXG4gICAgdmFyIHkgPSBzb3VyY2Uub2Zmc2V0WVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNvdXJjZTogc291cmNlLFxuICAgICAgeDogeCxcbiAgICAgIHk6IHksXG4gICAgICBkeDogZG93bkV2ZW50ID8geCAtIGRvd25FdmVudC54IDogMCxcbiAgICAgIGR5OiBkb3duRXZlbnQgPyB5IC0gZG93bkV2ZW50LnkgOiAwLFxuICAgICAgdHlwZTogJ01vdXNlJ1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUV2ZW50Rm9yVG91Y2ggKHNvdXJjZSkge1xuICAgIHZhciBib3VuZHMgPSBzb3VyY2UudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgdmFyIHRvdWNoID0gc291cmNlLnRvdWNoZXMubGVuZ3RoID4gMCA/IHNvdXJjZS50b3VjaGVzWzBdIDogc291cmNlLmNoYW5nZWRUb3VjaGVzWzBdXG5cbiAgICB2YXIgeCA9IHRvdWNoLmNsaWVudFggLSBib3VuZHMubGVmdFxuICAgIHZhciB5ID0gdG91Y2guY2xpZW50WSAtIGJvdW5kcy50b3BcblxuICAgIHJldHVybiB7XG4gICAgICBzb3VyY2U6IHNvdXJjZSxcbiAgICAgIHg6IHgsXG4gICAgICB5OiB5LFxuICAgICAgZHg6IGRvd25FdmVudCA/IHggLSBkb3duRXZlbnQueCA6IDAsXG4gICAgICBkeTogZG93bkV2ZW50ID8geSAtIGRvd25FdmVudC55IDogMCxcbiAgICAgIHR5cGU6ICdUb3VjaCdcbiAgICB9XG4gIH1cblxuICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICBkb3duRXZlbnQgPSBjcmVhdGVFdmVudEZvck1vdXNlKHNvdXJjZSlcbiAgICBsaXN0ZW5lcnMubm90aWZ5KCdkb3duJywgZG93bkV2ZW50KVxuICB9KVxuXG4gIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICBkb3duRXZlbnQgPSBjcmVhdGVFdmVudEZvclRvdWNoKHNvdXJjZSlcbiAgICBsaXN0ZW5lcnMubm90aWZ5KCdkb3duJywgZG93bkV2ZW50KVxuICB9KVxuXG4gIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgIGxpc3RlbmVycy5ub3RpZnkoJ21vdmUnLCBjcmVhdGVFdmVudEZvck1vdXNlKHNvdXJjZSkpXG4gIH0pXG5cbiAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgbGlzdGVuZXJzLm5vdGlmeSgnbW92ZScsIGNyZWF0ZUV2ZW50Rm9yVG91Y2goc291cmNlKSlcbiAgfSlcblxuICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgbGlzdGVuZXJzLm5vdGlmeSgndXAnLCBjcmVhdGVFdmVudEZvck1vdXNlKHNvdXJjZSkpXG4gIH0pXG5cbiAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICBsaXN0ZW5lcnMubm90aWZ5KCd1cCcsIGNyZWF0ZUV2ZW50Rm9yVG91Y2goc291cmNlKSlcbiAgICBkb3duRXZlbnQgPSBudWxsXG4gIH0pXG5cbiAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICBsaXN0ZW5lcnMubm90aWZ5KCdjYW5jZWwnLCBjcmVhdGVFdmVudEZvck1vdXNlKHNvdXJjZSkpXG4gICAgZG93bkV2ZW50ID0gbnVsbFxuICB9KVxuXG4gIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCBmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgbGlzdGVuZXJzLm5vdGlmeSgnY2FuY2VsJywgY3JlYXRlRXZlbnRGb3JUb3VjaChzb3VyY2UpKVxuICAgIGRvd25FdmVudCA9IG51bGxcbiAgfSlcbn1cblxuSW5wdXQuY3JlYXRlID0gZnVuY3Rpb24gKGRvbUVsZW1lbnQpIHtcbiAgcmV0dXJuIG5ldyBJbnB1dChkb21FbGVtZW50KVxufVxuXG5JbnB1dC5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAodHlwZSwgZm4pIHtcbiAgdGhpcy5saXN0ZW5lcnMub24odHlwZSwgZm4pXG4gIHJldHVybiB0aGlzXG59XG5cbklucHV0LnByb3RvdHlwZS5vZmYgPSBmdW5jdGlvbiAodHlwZSwgZm4pIHtcbiAgdGhpcy5saXN0ZW5lcnMub2ZmKHR5cGUsIGZuKVxuICByZXR1cm4gdGhpc1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElucHV0XG4iXX0=